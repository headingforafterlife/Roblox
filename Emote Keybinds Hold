local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local keysToHold = {
    [Enum.KeyCode.E] = { pressed = 4.0, released = 1.0 },  -- Fast
    [Enum.KeyCode.Q] = { pressed = 0.1, released = 1.0 },  -- Slow
    [Enum.KeyCode.F] = { pressed = -1.0, released = 1.0 }, -- Reverse 
    [Enum.KeyCode.V] = { pressed = 0.0, released = 1.0 }   -- Freeze
}

local player = Players.LocalPlayer
local commandModule = ReplicatedStorage:FindFirstChild("CommandModule")

local activeKeys = {}

local function adjustAnimationSpeed(speed)
    if player and player.Character then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid") or player.Character:FindFirstChildOfClass("AnimationController")
        if humanoid then
            for _, animationTrack in ipairs(humanoid:GetPlayingAnimationTracks()) do
                animationTrack:AdjustSpeed(speed)
            end
        end
    end
end

UserInputService.InputBegan:Connect(function(input)
    if keysToHold[input.KeyCode] then
        table.insert(activeKeys, input.KeyCode)
        adjustAnimationSpeed(keysToHold[input.KeyCode].pressed)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if keysToHold[input.KeyCode] then
        for i, key in ipairs(activeKeys) do
            if key == input.KeyCode then
                table.remove(activeKeys, i)
                break
            end
        end

        if #activeKeys > 0 then
            local lastKey = activeKeys[#activeKeys]
            adjustAnimationSpeed(keysToHold[lastKey].pressed)
        else
            adjustAnimationSpeed(1.0)
        end
    end
end)
